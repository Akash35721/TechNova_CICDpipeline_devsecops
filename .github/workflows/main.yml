name: Terraform Provisioning and Docker Deployment

on:
  push:
    branches:
      - main

jobs:
  # JOB 1: PROVISION INFRASTRUCTURE
  provision:
    name: 'Terraform Provisioning'
    runs-on: ubuntu-latest
    
    
    # --------------------------------------------------------------------
    # KEY PART 1: This 'outputs' block is essential.
    # It makes the IP address available to other jobs.
    # --------------------------------------------------------------------
    outputs:
      instance_ip: ${{ steps.tf_apply.outputs.instance_public_ip }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # ... other steps like setup-terraform, configure-aws-credentials ...

      - name: Terraform Apply
        # --------------------------------------------------------------------
        # KEY PART 2: This ID is essential for the 'outputs' block above.
        # --------------------------------------------------------------------
        id: tf_apply 
        run: terraform apply -auto-approve
        env:
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}

  # JOB 2: BUILD AND DEPLOY APPLICATION
  deploy:
    name: 'Build and Deploy Application'
    runs-on: ubuntu-latest
    # --------------------------------------------------------------------
    # KEY PART 3: This 'needs' context is essential.
    # It links this job to the previous one.
    # --------------------------------------------------------------------
    needs: provision 

    steps:
      # ... other steps like checkout, login-to-dockerhub, build-and-push ...

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          # --------------------------------------------------------------------
          # KEY PART 4: This syntax is essential.
          # It correctly reads the output from the 'provision' job.
          # --------------------------------------------------------------------
          host: ${{ needs.provision.outputs.instance_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker stop technova-app || true
            docker rm technova-app || true
            docker pull akash21357/technova-app:latest
            docker run -d --name technova-app -p 80:80 akash21357/technova-app:latest