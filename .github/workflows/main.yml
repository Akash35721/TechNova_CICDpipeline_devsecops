# --- .github/workflows/main.yml (Final Robust Version) ---

name: TechNova CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # JOB 1: PROVISIONS THE INFRASTRUCTURE ON AWS
  provision:
    name: 'Terraform Provisioning'
    runs-on: ubuntu-latest
    outputs:
      instance_ip: ${{ steps.get_ip.outputs.ip }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      # --- THIS IS THE FINAL FIX ---
      # This uses a file to guarantee a clean IP address value.
      - name: Get Public IP from Terraform Output
        id: get_ip
        run: |
          # 1. Save the raw output directly to a file. This avoids log pollution.
          terraform output -raw instance_public_ip > ip.txt
          # 2. Read the clean IP from the file into a variable.
          ip_address=$(cat ip.txt)
          # 3. Set the job output using the clean variable.
          echo "ip=${ip_address}" >> $GITHUB_OUTPUT

  # JOB 2: BUILDS THE APP AND DEPLOYS IT TO THE NEW SERVER
  deploy:
    name: 'Build and Deploy Application'
    runs-on: ubuntu-latest
    needs: provision # This job waits for the 'provision' job to finish

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/technova-app:latest

      # This step will now receive the clean IP address.
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ needs.provision.outputs.instance_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/technova-app:latest
            docker stop technova-app || true
            docker rm technova-app || true
            docker run -d --name technova-app -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/technova-app:latest